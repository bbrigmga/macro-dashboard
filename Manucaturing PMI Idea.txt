import requests
from bs4 import BeautifulSoup

def get_ism_pmi():
    # URL for the US Manufacturing PMI page
    url = "https://tradingeconomics.com/united-states/manufacturing-pmi"
    
    # Send a GET request to fetch the webpage content
    response = requests.get(url)
    
    # Check if the request was successful
    if response.status_code != 200:
        raise Exception(f"Failed to load page: Status code {response.status_code}")
    
    # Parse the HTML content with BeautifulSoup
    soup = BeautifulSoup(response.content, "html.parser")
    
    # Find the first table on the page (assuming it's the main data table)
    table = soup.find("table")
    if not table:
        raise Exception("No table found on the page")
    
    # Find the header row to identify the "Latest" or "Actual" column
    header_row = table.find("tr")
    headers = header_row.find_all("th")
    
    # Determine the index of the "Latest" or "Actual" column
    actual_index = None
    for i, th in enumerate(headers):
        header_text = th.text.lower().strip()
        if "latest" in header_text or "actual" in header_text:
            actual_index = i
            break
    if actual_index is None:
        raise ValueError("Could not find 'Latest' or 'Actual' column in the table")
    
    # Find the first data row (second row, since the first is the header)
    rows = table.find_all("tr")
    if len(rows) < 2:
        raise Exception("Table does not contain enough rows")
    data_row = rows[1]
    cells = data_row.find_all("td")
    
    # Extract the PMI number from the identified column
    if len(cells) <= actual_index:
        raise Exception("Not enough columns in the data row")
    pmi_text = cells[actual_index].text.strip()
    
    # Convert the text to a float
    try:
        pmi_number = float(pmi_text)
    except ValueError:
        raise ValueError(f"Could not convert '{pmi_text}' to a number")
    
    return pmi_number

# Example usage
try:
    pmi = get_ism_pmi()
    print(f"Latest ISM Manufacturing PMI: {pmi}")
except Exception as e:
    print(f"Error: {e}")


#Integration with STream lit code

import streamlit as st
from bs4 import BeautifulSoup
import requests

# [Insert the get_ism_pmi() function from above here]

st.title("Economic Data Dashboard")
try:
    pmi = get_ism_pmi()
    st.write(f"Latest ISM Manufacturing PMI: **{pmi}**")
except Exception as e:
    st.error(f"Failed to retrieve PMI: {e}")